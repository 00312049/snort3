121
-- valgrind fixes
-- basic reload restoration
-- support cmd() form of snort.cmd()
-- misc FIXITs
-- converted wizard to fully stateful
-- implemented paf rescan upon auto service id

120
-- tweaked --help!
-- added unused stringify(enum)
-- fixed piroir typo
-- fixed normalizer.tcp.ips
-- pulled in latest from Josh
-- fixed valgrind issues
-- refactored Shells to support multiple files/policies
-- changed detect reset to accommodate buffer population before reassembly
-- initial multiple policy binding
-- pulled in codec Makefile fix from Josh

119
-- updated binder
-- fixed packet direction
-- added default service bindings when wizard is configured but binder is not
-- updated snort.lua
-- added snort_defaults.lua
-- latest from Josh

118
-- fixed bind action
-- tweaked main loop
-- added module 1-line help
-- latest from josh
-- added plugin 1-line help (should be same as module, if plugin has module)

117
-- added --stdin-rules
-- added #begin / #end comments for rules
-- changed PAF_Status to StreamSplitter::Status
-- removed target reader current host/app
-- fixed error / warning line number issue
-- changed --conf-error-out to --pedantic
-- more FIXIT-H fixed
-- removed process.plugin_path and process.script_path since they are
   needed ahead of parsing
-- added idle processing, though still as sketchy as Snort until alpha 2
-- pulled latest from Josh - snort2lua tweaks and ... hidden symbols, yay!;
-- made ips_dsize static only and changed RangeCheck to SO_PUBLIC so we can
   use just one copy

116
-- fixed valgrind leak
-- observed memory corruption on Linux when loading dynamic plugins
   (not fixed)
-- fixed action leak
-- testing visibility=hidden
-- more FIXITs
-- fp related FIXITs
-- deleted profile.rules.file and profile.modules.file
-- deleted alerts.alert_file
-- changed --help to just cmd line options and added --help!
-- fixed Xcode warnings
-- fixed sflsq cursor
-- additional cleanup
-- fixed --max-threads configuration
-- fixed PKT_RESIZED bits
-- pulled the latest from Josh

115
-- remove share.h
-- misc FIXITs
-- refactored cmd line parsing and moved options to SnortModule
-- prioritized all FIXITs; FIXIT-J are for josh to reprioritize
-- got latest from Josh

114
-- more FIXIT cleanup
-- fixed flush bucket dumping
-- fixed cmake ips_replace.h
-- refactored script support
-- added lua logger support
-- added extra lualert (alert.lua) to demo lua loggers
-- updated snort.lua
-- pulled in Tom's latest as of 08/20-11:45

113
-- initial FlushBucket implementation
-- converted ips_resp and ips_react to actions
-- implemented byte code parser to replace bad juju in ips_content and
   ips_replace
-- stream workarounds for new packet / protocol foo and shutdown sequencing
-- fixed end of rule parsing to not require ; and recognize incomplete rules
-- fixed executing a command while paused
-- added act_replace
-- eliminated generators.h
-- misc FIXIT cleanup
-- made ac_bnfa/q mpse static only so dynamic build runs w/o any plugins

112
-- initial action plugin - reject
-- added total to StreamSplitter::reassemble()
-- removed StreamTcpModule ports and protos settings

111
-- fix up luajit ips rule option
-- fix up rule loading
-- fixed so rule parsing
-- added pcre jit
-- fixed --help-module to use exact match on module for params instead of
   prefix
-- added ParseAbort() so ParseError() doesn't fatal immediately
-- fixed ftp_client.bounce_to handling in module

110
-- converted rule meta options to ips options (w/o eval)
-- rewrote rule parsing
-- split so manager out from ips manager

109
-- changed --help to give overview of help
-- fixed stream_ip alerts (defrag -> stream_ip)
-- added missing help to parameters
-- pulled in latest from Josh
-- added Flow* to StreamSplitter::reassemble()

108
-- added IpsAction for ips rule action plugins
-- renamed various api *init() and *term() for consistency and possible
   move to base api

107
-- fixed stats output
-- deleted code that skipped over TCP urgent data when flushing
-- added StreamSplitter::reassemble() etc for PAR
-- updated ppm output to use stats functions for consistency
-- fixed old HI chunk splitting
-- changed stream tcp to use StreamSplitter::reassemble() instead of
    direct memcpy()
-- several new Xcode warnings cleaned up (mostly unused funcs)
-- fixed dynamic build of ips options

106
-- converted fpdetect.cc to pull fast pattern buffers from inspector gadget

105
-- changed PREPROC to MODULE in profiling defines
-- added --rule "<rule>" for easy command line testing
-- added --list-plugins to see which plugins don't have modules
-- added helpers/markup.{h,cc}
-- added optional header selector to http_header

104
-- changed configure --with-libpcre-* to --with-pcre-* for consistency
-- same for pcap (again!)
-- made ppm and perfprofiling disabled by default in configure.ac
-- added stream_size and stream_reassemble ips options

103
-- added modules to ips options
-- removed ips option sameip which was obsoleted by 116:152
-- content args offset, depth, distance, and within must be followed by a
   space not a colon
-- latest snort2lua updates from josh

102
-- moved stats (peg counts) to module
-- removed sum() and stats() from InspectApi
-- tweaked --help-module

101
-- tweaked startup output
-- fixed pattern matcher
-- pulled in latest from Tom

100
-- adding profiling to module
-- profile.preprocs is now profile.modules

99
-- updated wizard
-- removed service / app id from inspectors

98
-- initial wizard implementation

97
-- latest from Tom
-- some valgrind fixes

96
-- finished default fp selection
-- added NHttpInspect::get_buf() and related

95
-- added some wizard module foo
-- fixed cmake build with static inspectors for wizard and binder

94
-- pulled in latest from Tom

93
-- updated example inspector dpx.cc api
-- misc tweaks
-- changed binder to inspector with designated type
-- added prototype wizard inspector for service selection magic
-- fixed plugin instantiation when top level table is a list
-- changed http_inspect to optionally build dynamically

92
-- fixed fast_pattern only auto configuration
-- more detection buffer cleanup

91
-- eliminated more RULE_OPTION_TYPE_*
-- converted remaining rule options over to use cursor
-- added IpsOption CursorActionType
-- finally eliminated doe_ptr and friends ... yay!
-- merged ips_option_base64_{data,decode}.cc
-- fast_pattern_only (previously fast_pattern:only) is gone

90
-- added InspectApi.buffers and Inspector::getbuf()
-- changed http_* rule options to use Inspector::getbuf()
-- changed luajit rule option to use the cursor

89
-- pulled in the latest from tom and josh

88
-- overhauled content and pcre detection to use Cursor
-- http_* are now first class rule options
-- removed experimental contents and get_buf() from InspectApi
-- changed call to acquire daq with count 0 (all)
-- changed replace to be 1st class rule option
-- split boyer-moore functions out of mstring module

87
-- renamed api function typedefs to camel case for consistency and to match
   style guide
-- fixed some Xcode static analysis issues
-- removed http_encode rule option
-- removed ftpbounce rule option
-- removed examples/
-- pulled in latest from Tom with start line changes

86
-- pulled in tom's latest nhttp_inpsect code

85
-- swapped use of range and deflt for PT_TABLE and PT_LIST Parameters
   (Parameter* is now in range so that deflt may be used for tabl/list
   defaults)
-- removed -b, -N, -Z and, --perfmon-file options
-- removed uricontent ips rule option
-- added contents and getbuf to InspectApi for content buffers


84
-- pulled in latest codecs
-- removed src/mempool/
-- converted attribute table from xml to lua
-- removed lex/yacc foo from configure.ac

83
-- fixed linux linker ordering

82
-- fixed atom splitter instantiation for fallback in tcp_session.cc

81
-- deleted service registration for paf
-- added StreamSplitter to Inspector
-- added service name to InspectApi
-- deleted ports configs from inspector
-- added port-based bindings lookups

80
-- deleted port monitor foo; will be obviated by binder
-- removed ttl norm checks from codecs; made no sense; drop iff rule is drop
-- moved stream_* bindings to binder
-- removed --enable-inline-init-failopen, --enable-pthread, --enable-ha

79
-- pulled in latest codecs

78
-- deleted ha code; too much churn to support now
-- refactored session and related
-- changed inspector api (priority -> type, purge -> get ssn)

77
-- pulled in josh's changes to make on Linux
-- updated snort.lua for bindings

76
-- moved all src/*.{h,cc} except main.{h,cc} to src/main/
-- updated prototype bindings
-- Xcode warnings cleanup
-- added basic git commands to doc
-- codec updates

75
-- added back InspectApi.pinit() and InspectApi.pterm()
-- eliminated InspectApi.stop()
-- changed signature to Inspector::configure()
-- Inspector::init() and term() are now pinit() and pterm()!  beware!
   (for consistency with naming scheme)
-- other changes to InspectApi / Inspector per comments in header

74
-- started this ChangeLog for internal use only
-- fixed -A none and -K none
-- more refactoring of ftp/telnet and modularization
-- changed lua/*.lua to EXTRA_DIST to avoid installation overwrites
-- updated snort.lua wrt the legacy include - read comments therein

